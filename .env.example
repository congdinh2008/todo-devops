# Environment Variables Configuration
# Copy this file to .env and update the values for your environment

# =============================================================================
# PostgreSQL Database Configuration
# =============================================================================
POSTGRES_DB=tododb
POSTGRES_USER=todouser
POSTGRES_PASSWORD=todopass
POSTGRES_PORT=5432

# =============================================================================
# Backend Configuration (Spring Boot)
# =============================================================================
BACKEND_PORT=8080

# Spring Profile (dev, test, prod)
SPRING_PROFILE=prod

# JPA Configuration
SPRING_JPA_DDL_AUTO=update
SPRING_JPA_SHOW_SQL=false

# JWT Configuration
# IMPORTANT: Change these secrets in production!
# JWT_SECRET must be at least 256 bits (32 characters)
JWT_SECRET=change-this-secret-key-in-production-min-256-bits-please-use-a-strong-random-key
JWT_EXPIRATION=86400000

# =============================================================================
# Frontend Configuration (React + Vite)
# =============================================================================
FRONTEND_PORT=3000

# API Base URL (used during build time)
# For Docker Compose, use the backend service name
VITE_API_BASE_URL=http://localhost:8080/api

# Application Name
VITE_APP_NAME=Todo Application

# =============================================================================
# Production Deployment Notes
# =============================================================================
# 
# 1. Security:
#    - Change all default passwords
#    - Generate a strong JWT_SECRET (minimum 256 bits)
#    - Use environment-specific values
#    - Never commit .env file to version control
#
# 2. Database:
#    - Use strong passwords
#    - Consider using Docker secrets for sensitive data
#    - Set up regular backups
#
# 3. Application:
#    - Set SPRING_PROFILE=prod for production
#    - Set SPRING_JPA_DDL_AUTO=validate or none in production
#    - Configure proper logging levels
#
# 4. Docker:
#    - Use specific version tags for images
#    - Set resource limits for containers
#    - Configure proper restart policies
#
# =============================================================================
