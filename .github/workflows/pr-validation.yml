name: Pull Request Validation

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    name: PR Validation Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check PR title format
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "PR Title: $PR_TITLE"
          
          # Check if PR title follows conventional commit format or includes ticket number
          if ! echo "$PR_TITLE" | grep -qE '^(\[.+\]|feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?:.+'; then
            echo "::warning::PR title should follow conventional commit format or include a ticket reference"
          fi
      
      - name: Check for merge conflicts
        run: |
          git fetch origin ${{ github.base_ref }}
          if git diff --name-only --diff-filter=U origin/${{ github.base_ref }}; then
            echo "::error::PR has merge conflicts"
            exit 1
          fi
      
      - name: Check modified files
        id: changed-files
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Check if backend or frontend changed
          if echo "$CHANGED_FILES" | grep -q "^backend/"; then
            echo "backend_changed=true" >> $GITHUB_OUTPUT
          else
            echo "backend_changed=false" >> $GITHUB_OUTPUT
          fi
          
          if echo "$CHANGED_FILES" | grep -q "^frontend/"; then
            echo "frontend_changed=true" >> $GITHUB_OUTPUT
          else
            echo "frontend_changed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Set up JDK 21
        if: steps.changed-files.outputs.backend_changed == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Quick backend validation
        if: steps.changed-files.outputs.backend_changed == 'true'
        run: |
          cd backend
          mvn clean compile -B -q
      
      - name: Set up Node.js
        if: steps.changed-files.outputs.frontend_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Quick frontend validation
        if: steps.changed-files.outputs.frontend_changed == 'true'
        run: |
          cd frontend
          npm ci
          npm run build
      
      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const backendChanged = '${{ steps.changed-files.outputs.backend_changed }}' === 'true';
            const frontendChanged = '${{ steps.changed-files.outputs.frontend_changed }}' === 'true';
            
            let comment = '## 🤖 PR Validation Summary\n\n';
            comment += `- Backend changes detected: ${backendChanged ? '✅ Yes' : '❌ No'}\n`;
            comment += `- Frontend changes detected: ${frontendChanged ? '✅ Yes' : '❌ No'}\n`;
            comment += '\n### Next Steps:\n';
            comment += '- ✅ Automated tests will run on the changed components\n';
            comment += '- 📝 Please ensure your PR description is complete\n';
            comment += '- 👀 Request reviews from team members\n';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  backend-pr-check:
    name: Backend PR Checks
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'backend/')
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: tododb_test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Build and Test
        run: |
          cd backend
          mvn clean test -B
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/tododb_test
          SPRING_DATASOURCE_USERNAME: test
          SPRING_DATASOURCE_PASSWORD: test

  frontend-pr-check:
    name: Frontend PR Checks
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'frontend/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install and Test
        run: |
          cd frontend
          npm ci
          npm run lint
          npm test -- --run
      
      - name: Build
        run: |
          cd frontend
          npm run build

  all-checks-passed:
    name: All PR Checks Passed
    runs-on: ubuntu-latest
    needs: [pr-validation, backend-pr-check, frontend-pr-check]
    if: always()
    
    steps:
      - name: Check all jobs status
        run: |
          if [ "${{ needs.pr-validation.result }}" != "success" ]; then
            echo "PR validation failed"
            exit 1
          fi
          
          echo "✅ All PR checks passed!"
